[tool.poetry]
name = "strr-pay"
version = "0.3.0"
description = "BC Registries  - strr-payment-processor"
authors = []
license = "BSD-3-Clause"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12.2"
flask = "^3.0.3"
flask-sqlalchemy = "^3.1.1"
flask-migrate = "^4.0.4"
launchdarkly-server-sdk = "^9.0.1"
python-dotenv = "^1.0.1"
sentry-sdk = "^1.44.1"
flask-babel = "^4.0.0"
flask-jwt-oidc = "^0.7.0"
gunicorn = "^21.2.0"
flask-cors = "^4.0.0"
pg8000 = "^1.31.2"
protobuf = "3.19.5"
isort = "^5.13.2"
pylint = "^3.0.3"
flake8-pyproject = "^1.2.3"
gcp-queue = { git = "https://github.com/thorwolpert/sbc-connect-common.git", subdirectory = "python/gcp-queue", branch = "main" }
structured-logging = { git = "https://github.com/thorwolpert/sbc-connect-common.git", subdirectory = "python/structured-logging", branch = "main" }
strr-api = {git = "https://github.com/bcgov/STRR.git", rev = "main", subdirectory = "strr-api"}
nanoid = "^2.0.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-mock = "^3.14.0"
black = "^24.4.2"
zimports = "^0.6.1"
lovely-pytest-docker = "^0.3.1"
isort = "^5.13.2"
flake8 = "^7.1.1"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.mypy_cache
  | \.pytest_cache
  | build
  | dist
)/
'''

[tool.isort]
profile = "google"
line_length = 100
known_first_party = ["strr_pay"]

[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",
    "W503",
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
    ".pytest_cache",
]
import-order-style = "google"
application-import-names = ["strr_pay"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
